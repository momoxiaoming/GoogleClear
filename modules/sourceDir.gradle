allprojects {
    afterEvaluate { project ->

        def hasApplication = project.android.defaultConfig != null && project.android.defaultConfig.applicationId != null
        if (hasApplication) {
            def folderPath = project.projectDir.path + "/build/generated/source/wb"
            def folder = new File(folderPath)
            if (!folder.exists()) {
                folder.mkdirs()
            }
            def releaseFolder = new File(folderPath, '/release')
            def debugFolder = new File(folderPath, '/debug')
            def isRelease = isReleaseBuildType()
            def srcDir = releaseFolder
            if (isRelease) {
                if (!releaseFolder.exists()) {
                    releaseFolder.mkdirs()
                }
            } else {
                if (!debugFolder.exists()) {
                    debugFolder.mkdirs()
                }
                srcDir = debugFolder
            }

            def mainSource = project.android.sourceSets.findByName("main")
            if (mainSource == null) {
                mainSource = project.android.sourceSets.create("main")
            }
            mainSource.java.srcDirs += [srcDir.absolutePath]

        }
    }
}

task generateBuildConfig() {
//    appName = 'SuperTrooperStarshipApp'
    version = version // same as project version
//    clsName = 'MainConfig'
//    packageName = 'org.sample'
    outputs.dir(new File(project.projectDir.path + "/build/generated/source/wb"))

//    buildConfigField 'int', 'MY_INT', '42'
//    buildConfigField 'float', 'MY_FLOAT', '2.5345f'
//    buildConfigField 'double', 'MY_DOUBLE', '2.1423423'
//    buildConfigField 'long', 'MY_LONG', '123L'
//    buildConfigField 'String', 'MY_STR', 'my string'
//    buildConfigField 'byte', 'MY_BYTE', '(byte) 0xff'
//    buildConfigField 'byte[]', 'MY_BYTEARR', '{ (byte) 0xff, (byte) 0xa, (byte) 0x20 }'
}

boolean isReleaseBuildType() {
    for (String taskName : gradle.startParameter.taskNames) {
        println("taskName: $taskName")
        return ((taskName.contains("assemble")||(taskName.toLowerCase(Locale.US).contains("resguard"))) && !taskName.contains("Debug"))
    }
    return false
}
